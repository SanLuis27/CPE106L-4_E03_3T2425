LAB 1 - PROBLEM 1 (POSTLAB)

from collections import Counter

def mean(numbers):
    return sum(numbers) / len(numbers)

def median(numbers):
    sorted_nums = sorted(numbers)
    n = len(sorted_nums)
    mid = n // 2
    if n % 2 == 0:
        return (sorted_nums[mid - 1] + sorted_nums[mid]) / 2
    else:
        return sorted_nums[mid]

def mode(numbers):
    freq = Counter(numbers)
    max_count = max(freq.values())
    modes = [key for key, count in freq.items() if count == max_count]
    return modes[0] if len(modes) == 1 else modes

if __name__ == "__main__":
    # Sample list for testing
    sample_data = [5, 1, 2, 5, 3, 2, 5, 4]
    print("Mean:", mean(sample_data))
    print("Median:", median(sample_data))
    print("Mode:", mode(sample_data))



Lab 1 - Problem 2 (POSTLAB)

def main():

  filename = input("Enter the filename: ")

  try:

    with open(filename, 'r', encoding='utf-8') as file:
      lines = file.readlines()

    total_lines = len(lines)

    print(f"\nFile '{filename}' loaded successfully.")
    print(f"Total number of lines: {total_lines}\n")

    while True:

      try:

        line_num = int(input(f"Enter a line number (1 to {total_lines}, 0 to quit): "))
        if line_num == 0:
          print("Exiting program.")
          break

        elif 1 <= line_num <= total_lines:
          print(f"Line {line_num}: {lines[line_num - 1].rstrip()}\n")

        else:
          print(f"Invalid line number. Please enter between 1 and {total_lines}.\n")

      except ValueError:
        print("Please enter a valid number.\n")

  except FileNotFoundError:
    print(f"File '{filename}' not found.")

if __name__ == "__main__":
  main()
